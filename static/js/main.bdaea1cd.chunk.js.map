{"version":3,"sources":["components/ErrorIndicator/image.png","components/Header/index.js","services/swapi.js","components/Loader/index.js","components/ErrorIndicator/index.js","components/RandomPlanet/index.js","components/ErrorButton/index.js","components/PersonDetails/PersonDetailsView/index.js","components/PersonDetails/index.js","components/ItemList/index.js","components/PeoplePage/index.js","components/SecretPages/login.js","components/SecretPages/secret.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","state","menuOpened","openMenu","e","_this","setState","style","this","react_default","a","createElement","className","Link","to","onClick","id","Component","SwapiService","_apiBase","getAllPeople","_callee","res","regenerator_default","wrap","_context","prev","next","getResource","sent","abrupt","results","map","_transformPerson","stop","getPerson","_callee2","person","_context2","concat","getAllPlanets","_callee3","_context3","_transformPlanet","getPlanet","_callee4","planet","_context4","getAllStarships","_callee5","_context5","_transformStarship","getStarship","_callee6","starship","_context6","_extractId","item","url","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","gender","birthYear","birth_year","eyeColor","eye_color","fetch","ok","Error","status","json","Spinner","type","ErrorIndicator","src","icon","alt","width","RandomPlanet","swapiService","loading","error","onPlanetLoaded","onError","err","updatePlanet","Math","floor","random","then","catch","interval","setInterval","clearInterval","_this$state","Loader","components_ErrorIndicator","RandomPlanet_PlanetView","PlanetView","_ref","children","ErrorButton","renderError","_this2","foo","bar","ItemDetailsView","ErrorButton_ErrorButton","props","people","renderPerson","planets","renderPlanet","starships","renderStarship","PersonDetails","updatePerson","prevProps","personId","getData","_this$props","PersonDetailsView","ItemList","itemList","renderItems","arr","label","renderItem","onItemSelected","key","PeoplePage","selectedItem","hasError","onPersonSelected","components_ItemList","getListType","itemDetails","components_PersonDetails","getDetailsType","PeoplePage_Row","left","right","Row","LoginPage","isLoggedIn","onLogin","Redirect","SecretPage","App","renderPeople","components_PeoplePage","renderStarships","renderPlanets","BrowserRouter","components_Header","components_RandomPlanet","Switch","Route","path","exact","render","component","login","secret","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.bdaea1cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.7ae21888.png\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Header extends Component {\r\n  state = { menuOpened: false };\r\n\r\n  openMenu = e => {\r\n    this.setState({\r\n      menuOpened: !this.state.menuOpened\r\n    });\r\n  };\r\n  render() {\r\n    const style = this.state.menuOpened\r\n      ? \" navbar-collapse\"\r\n      : \"collapse navbar-collapse\";\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          StarDB\r\n        </Link>\r\n        <button onClick={this.openMenu} className=\"navbar-toggler\">\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className={style} id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/people\" className=\"nav-link\">\r\n                People\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/planets\" className=\"nav-link\">\r\n                Planets\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/starships\" className=\"nav-link\">\r\n                Starships\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/secret\" className=\"nav-link\">\r\n                Secret\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/login\" className=\"nav-link\">\r\n                Login\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","export default class SwapiService {\r\n  _apiBase = `https://swapi.co/api`;\r\n  async getResource(url) {\r\n    const res = await fetch(this._apiBase + url);\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url} recived ${res.status}`);\r\n    }\r\n    return await res.json();\r\n  }\r\n  getAllPeople = async () => {\r\n    const res = await this.getResource(`/people/`);\r\n    return res.results.map(this._transformPerson);\r\n  };\r\n  getPerson = async id => {\r\n    const person = await this.getResource(`/people/${id}`);\r\n    return this._transformPerson(person);\r\n  };\r\n  getAllPlanets = async () => {\r\n    const res = await this.getResource(`/planets/`);\r\n    return res.results.map(this._transformPlanet);\r\n  };\r\n  getPlanet = async id => {\r\n    const planet = await this.getResource(`/planets/${id}`);\r\n    return this._transformPlanet(planet);\r\n  };\r\n  getAllStarships = async () => {\r\n    const res = await this.getResource(`/starships/`);\r\n    return res.results.map(this._transformStarship);\r\n  };\r\n  getStarship = async id => {\r\n    const starship = await this.getResource(`/starships/${id}`);\r\n    return this._transformStarship(starship);\r\n  };\r\n  _extractId = item => {\r\n    const regExpId = /\\/([0-9]*)\\/$/;\r\n    return item.url.match(regExpId)[1];\r\n  };\r\n  _transformPlanet = planet => {\r\n    return {\r\n      id: this._extractId(planet),\r\n      name: planet.name,\r\n      population: planet.population,\r\n      rotationPeriod: planet.rotation_period,\r\n      diameter: planet.diameter\r\n    };\r\n  };\r\n  _transformStarship = starship => {\r\n    return {\r\n      id: this._extractId(starship),\r\n      name: starship.name,\r\n      model: starship.model,\r\n      manufacturer: starship.manufacturer,\r\n      costInCredits: starship.cost_in_credits,\r\n      length: starship.length,\r\n      crew: starship.crew,\r\n      passengers: starship.passengers,\r\n      cargoCapacity: starship.cargo_capacity\r\n    };\r\n  };\r\n  _transformPerson = person => {\r\n    return {\r\n      id: this._extractId(person),\r\n      name: person.name,\r\n      gender: person.gender,\r\n      birthYear: person.birth_year,\r\n      eyeColor: person.eye_color\r\n    };\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./loader.css\";\r\n\r\nclass Spinner extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"lds-css ng-scope \">\r\n        <div className=\"lds-flickr\">\r\n          <div />\r\n          <div />\r\n          <div />\r\n        </div>\r\n        <style type=\"text/css\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport \"./styles.sass\";\r\nimport icon from \"./image.png\";\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div className=\"error-indicator\">\r\n      <img src={icon} alt=\"error\" width=\"10%\" />\r\n      <span className=\"boom\">BOOM!</span>\r\n      <span>somthing went wrong</span>\r\n      <span>(but we will fix it soon)</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import React, { Component } from \"react\";\r\nimport SwapiService from \"./../../services/swapi\";\r\nimport Spinner from \"./../Loader\";\r\nimport ErrorIndicator from \"./../ErrorIndicator\";\r\nimport \"./styles.sass\";\r\nclass RandomPlanet extends Component {\r\n  swapiService = new SwapiService();\r\n  state = {\r\n    planet: {},\r\n    loading: true,\r\n    error: false\r\n  };\r\n  componentDidMount() {\r\n    this.updatePlanet();\r\n    this.interval = setInterval(this.updatePlanet, 10000);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n  onPlanetLoaded = planet => {\r\n    this.setState({ planet, loading: false });\r\n  };\r\n  onError = err => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false\r\n    });\r\n  };\r\n  updatePlanet = () => {\r\n    const id = Math.floor(Math.random() * 18 + 1);\r\n    this.swapiService\r\n      .getPlanet(id)\r\n      .then(this.onPlanetLoaded)\r\n      .catch(this.onError);\r\n  };\r\n\r\n  render() {\r\n    const { planet, loading, error } = this.state;\r\n    return (\r\n      <div className=\"jumbotron rounded d-flex justify-center mt-4 p-0\">\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : error ? (\r\n          <ErrorIndicator />\r\n        ) : (\r\n          <PlanetView planet={planet} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst PlanetView = ({ planet }) => {\r\n  const { id, name, population, rotationPeriod, diameter } = planet;\r\n  return (\r\n    <div className=\"random-planet d-flex\">\r\n      <div className=\"planet-image \">\r\n        <img\r\n          alt=\"Изображение отсутствует\"\r\n          src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\r\n          width=\"100%\"\r\n        />\r\n      </div>\r\n      <div className=\"planet-info col-xl-8\">\r\n        <h3>{name}</h3>\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li className=\"list-group-item\">\r\n            <span>Population:</span> <span> {population}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span>Rotation Period: </span>\r\n            <span children={rotationPeriod} />\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span children=\"Diameter: \" />\r\n            <span children={diameter} />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default RandomPlanet;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ErrorButton extends Component {\r\n  state = {\r\n    renderError: false\r\n  };\r\n\r\n  render() {\r\n    if (this.state.renderError) {\r\n      this.foo.bar = 0;\r\n    }\r\n\r\n    return (\r\n      <button\r\n        className=\"error-button btn btn-danger btn-lg\"\r\n        onClick={() => this.setState({ renderError: true })}\r\n      >\r\n        Throw Error\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ErrorButton from \"../../ErrorButton\";\r\n\r\nclass ItemDetailsView extends Component {\r\n  renderPlanet(item) {\r\n    const { id, name, population, rotationPeriod, diameter } = item;\r\n    return (\r\n      <div className=\"details\">\r\n        <div className=\"subject-picture\">\r\n          <img\r\n            src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\r\n            alt={name}\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <h4>{name}</h4>\r\n          <ul className=\"person-data list-group list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n              <span>Population: </span>\r\n              <span children={population} />\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span>Rotation Period: </span>\r\n              <span children={rotationPeriod} />\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span>Diameter: </span>\r\n              <span children={diameter} />\r\n            </li>\r\n          </ul>\r\n          <ErrorButton />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  renderPerson(item) {\r\n    const { id, name, gender, birthYear, eyeColor } = item;\r\n    return (\r\n      <div className=\"details\">\r\n        <div className=\"subject-picture\">\r\n          <img\r\n            src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`}\r\n            alt={name}\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <h4>{name}</h4>\r\n          <ul className=\"person-data list-group list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n              <span>Gender: </span>\r\n              <span children={gender} />\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span>Birth Year: </span>\r\n              <span children={birthYear} />\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span>Eye Color: </span>\r\n              <span children={eyeColor} />\r\n            </li>\r\n          </ul>\r\n          <ErrorButton />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  renderStarship(item) {\r\n    const { id, name, manufacturer, passengers, cargoCapacity } = item;\r\n    return (\r\n      <div className=\"details\">\r\n        <div className=\"subject-picture\">\r\n          <img\r\n            src={`https://starwars-visualguide.com/assets/img/starships/${id}.jpg`}\r\n            alt={name}\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <h4>{name}</h4>\r\n          <ul className=\"person-data list-group list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n              <span>Manufacturer: </span>\r\n              <span children={manufacturer} />\r\n            </li>\r\n\r\n            <li className=\"list-group-item\">\r\n              <span>Passengers: </span>\r\n              <span children={passengers} />\r\n            </li>\r\n\r\n            <li className=\"list-group-item\">\r\n              <span>Cargo Capacity: </span>\r\n              <span children={cargoCapacity} />\r\n            </li>\r\n          </ul>\r\n          <ErrorButton />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { item } = this.props;\r\n    if (this.props.people) {\r\n      return this.renderPerson(item);\r\n    }\r\n    if (this.props.planets) {\r\n      return this.renderPlanet(item);\r\n    }\r\n    if (this.props.starships) {\r\n      return this.renderStarship(item);\r\n    }\r\n  }\r\n}\r\nexport default ItemDetailsView;\r\n","import React, { Component } from \"react\";\r\nimport \"./styles.sass\";\r\nimport SwapiService from \"./../../services/swapi\";\r\nimport Spinner from \"../Loader\";\r\nimport PersonDetailsView from \"./PersonDetailsView\";\r\nclass PersonDetails extends Component {\r\n  swapiService = new SwapiService();\r\n  state = {\r\n    item: null,\r\n    loading: true\r\n  };\r\n  componentDidMount() {\r\n    this.updatePerson();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.personId !== prevProps.personId) this.updatePerson();\r\n  }\r\n  updatePerson() {\r\n    const { personId } = this.props;\r\n    this.setState({ loading: true });\r\n    if (!personId) {\r\n      return;\r\n    }\r\n    this.props.getData(personId).then(item => {\r\n      this.setState({\r\n        item,\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    const { item, loading } = this.state;\r\n    const { people, planets, starships } = this.props;\r\n    return (\r\n      <div className=\"jumbotron p-1 mt-4 mt-md-0 mt-xl-0\">\r\n        {!this.state.item ? (\r\n          <span>Select a person from a list</span>\r\n        ) : loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <PersonDetailsView\r\n            people={people}\r\n            planets={planets}\r\n            starships={starships}\r\n            item={item}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PersonDetails;\r\n","import React, { Component } from \"react\";\r\nimport Spinner from \"./../Loader\";\r\nclass ItemList extends Component {\r\n  state = {\r\n    itemList: null\r\n  };\r\n  componentDidMount() {\r\n    const { getData } = this.props;\r\n    getData().then(itemList =>\r\n      this.setState({\r\n        itemList\r\n      })\r\n    );\r\n  }\r\n  renderItems = arr => {\r\n    return arr.map(item => {\r\n      const label = this.props.renderItem(item);\r\n      return (\r\n        <li\r\n          onClick={() => this.props.onItemSelected(item.id)}\r\n          key={item.id}\r\n          className=\"list-group-item list-group-item-action \"\r\n          children={label}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    const { itemList } = this.state;\r\n    if (!itemList) return <Spinner />;\r\n\r\n    return (\r\n      <div className=\"list-group fluid \">{this.renderItems(itemList)}</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemList;\r\n","import React, { Component } from \"react\";\r\nimport PersonDetails from \"./../PersonDetails\";\r\nimport ItemList from \"./../ItemList\";\r\nimport ErrorIndicator from \"../ErrorIndicator\";\r\nimport SwapiService from \"../../services/swapi\";\r\nclass PeoplePage extends Component {\r\n  swapiService = new SwapiService();\r\n  state = { selectedItem: null, hasError: false };\r\n  onPersonSelected = id => {\r\n    this.setState({\r\n      selectedItem: id\r\n    });\r\n  };\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true\r\n    });\r\n  }\r\n  render() {\r\n    const { people, planets, starships } = this.props;\r\n    const itemList = (\r\n      <ItemList\r\n        people={people}\r\n        planets={planets}\r\n        starships={starships}\r\n        onItemSelected={this.onPersonSelected}\r\n        getData={this.props.getListType}\r\n        renderItem={item => item.name}\r\n      />\r\n    );\r\n    const itemDetails = (\r\n      <PersonDetails\r\n        people={people}\r\n        planets={planets}\r\n        starships={starships}\r\n        getData={this.props.getDetailsType}\r\n        personId={this.state.selectedItem}\r\n      />\r\n    );\r\n    if (this.state.hasError) return <ErrorIndicator />;\r\n    return (\r\n      <div>\r\n        <Row left={itemList} right={itemDetails} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Row = ({ left, right }) => {\r\n  return (\r\n    <div className=\"row mt-4 \">\r\n      <div className=\"col-md-6\" children={left} />\r\n      <div className=\"col-md-6\" children={right} />\r\n    </div>\r\n  );\r\n};\r\nexport default PeoplePage;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst LoginPage = ({ isLoggedIn, onLogin }) => {\r\n  if (isLoggedIn) return <Redirect to=\"/\" />;\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <p>Login to see secret page!</p>\r\n      <button className=\"btn btn-primary\" onClick={onLogin}>\r\n        Login\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst SecretPage = ({ isLoggedIn }) => {\r\n  if (isLoggedIn) {\r\n    return (\r\n      <div className=\"jumbotron text-center\">\r\n        <h3>This page is full of secrets!!!</h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <Redirect to=\"/login\" />;\r\n};\r\n\r\nexport default SecretPage;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Header from \"./../Header\";\r\nimport RandomPlanet from \"./../RandomPlanet\";\r\nimport PeoplePage from \"./../PeoplePage\";\r\nimport LoginPage from \"../SecretPages/login.js\";\r\nimport SecretPage from \"../SecretPages/secret.js\";\r\nimport \"./styles.sass\";\r\n\r\nimport SwapiService from \"../../services/swapi\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isLoggedIn: false\r\n  };\r\n  swapiService = new SwapiService();\r\n\r\n  onLogin = () => {\r\n    this.setState({\r\n      isLoggedIn: true\r\n    });\r\n  };\r\n  renderPeople = () => {\r\n    return (\r\n      <PeoplePage\r\n        people\r\n        getListType={this.swapiService.getAllPeople}\r\n        getDetailsType={this.swapiService.getPerson}\r\n      />\r\n    );\r\n  };\r\n  renderStarships = () => {\r\n    return (\r\n      <PeoplePage\r\n        starships\r\n        getListType={this.swapiService.getAllStarships}\r\n        getDetailsType={this.swapiService.getStarship}\r\n      />\r\n    );\r\n  };\r\n  renderPlanets = () => {\r\n    return (\r\n      <PeoplePage\r\n        planets\r\n        getListType={this.swapiService.getAllPlanets}\r\n        getDetailsType={this.swapiService.getPlanet}\r\n      />\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"container\">\r\n          <Header />\r\n          <RandomPlanet />\r\n          <Switch>\r\n            <Route\r\n              path=\"/\"\r\n              exact\r\n              render={() => <h2 className=\"text-center\">Welcome to StarDB</h2>}\r\n            />\r\n\r\n            <Route path=\"/planets\" component={this.renderPlanets} />\r\n            <Route path=\"/people\" component={this.renderPeople} />\r\n            <Route path=\"/starships\" component={this.renderStarships} />\r\n            <Route\r\n              path=\"/login\"\r\n              render={() => {\r\n                return (\r\n                  <LoginPage\r\n                    isLoggedIn={this.state.isLoggedIn}\r\n                    onLogin={this.onLogin}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n            <Route\r\n              path=\"/secret\"\r\n              render={() => {\r\n                return <SecretPage isLoggedIn={this.state.isLoggedIn} />;\r\n              }}\r\n            />\r\n            <Route\r\n              path=\"/star-db\"\r\n              render={() => {\r\n                return <Redirect to=\"/\" />;\r\n              }}\r\n            />\r\n            <Route\r\n              render={() => {\r\n                return <h2> Page not found</h2>;\r\n              }}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}